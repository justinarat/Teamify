"""PLS FOR LOVE OF GOD ADD MAX PLAYERS

Revision ID: 7d1d35941892
Revises: f4a8511bee5a
Create Date: 2024-05-18 23:39:52.046138

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine import reflection


# revision identifiers, used by Alembic.
revision = '7d1d35941892'
down_revision = 'f4a8511bee5a'
branch_labels = None
depends_on = None



def upgrade():
    # Drop the existing _alembic_tmp_Lobby table if it exists
    #op.drop_table('_alembic_tmp_Lobby')

    # Drop the unique constraint from LobbyID column
    op.alter_column('Lobby', 'LobbyID', unique=False)

    # Add the maxPlayers column
    with op.batch_alter_table('Lobby', schema=None) as batch_op:
        batch_op.add_column(sa.Column('maxPlayers', sa.Integer(), nullable=True))

    # Check if LobbyID column exists before adding it
    if not has_column('Lobby', 'LobbyID'):
        # Add the LobbyID column
        op.add_column('Lobby', sa.Column('LobbyID', sa.Text(), nullable=True))

    # Populate LobbyID with default values
    op.execute("UPDATE Lobby SET LobbyID = 'default_value' WHERE LobbyID IS NULL")

    # Alter LobbyID column to be NOT NULL
    op.alter_column('Lobby', 'LobbyID', nullable=False)

    # Add the unique constraint back to LobbyID column
    with op.batch_alter_table('Lobby', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_lobby_lobbyid', ['LobbyID'])

def has_column(table_name, column_name):
    """
    Check if a column exists in a table.
    """
    inspector = reflection.Inspector.from_engine(op.get_bind())
    columns = inspector.get_columns(table_name)
    for column in columns:
        if column['name'] == column_name:
            return True
    return False

def downgrade():
    # Downgrade script here



    with op.batch_alter_table('LobbyPlayers', schema=None) as batch_op:
        batch_op.alter_column('RowID',
               existing_type=sa.NullType(),
               nullable=False)
        batch_op.drop_constraint('fk_lobby_players_lobby', type_='foreignkey')
        batch_op.create_foreign_key('fk_lobby_players_lobby', 'Lobby', ['LobbyID'], ['LobbyID'])

    with op.batch_alter_table('LobbyTags', schema=None) as batch_op:
        batch_op.alter_column('RowID',
               existing_type=sa.NullType(),
               nullable=False)
        batch_op.drop_constraint('fk_lobby_tags_lobby', type_='foreignkey')
        batch_op.create_foreign_key('fk_lobby_tags_lobby', 'Lobby', ['LobbyID'], ['LobbyID'])

    with op.batch_alter_table('LobbyTimes', schema=None) as batch_op:
        batch_op.drop_constraint('fk_lobby_times_lobby', type_='foreignkey')
        batch_op.create_foreign_key('fk_lobby_times_lobby', 'Lobby', ['LobbyID'], ['LobbyID'])

    with op.batch_alter_table('UserTracker', schema=None) as batch_op:
        batch_op.add_column(sa.Column('LobbyID', sa.Text(), nullable=False))
        batch_op.drop_constraint('fk_user_tracker_lobby', type_='foreignkey')
        batch_op.create_foreign_key('fk_user_tracker_lobby', 'Lobby', ['LobbyID'], ['LobbyID'])
        batch_op.drop_column('LobbyId')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('UserTracker', schema=None) as batch_op:
        batch_op.add_column(sa.Column('LobbyId', sa.TEXT(), nullable=False))
        batch_op.drop_constraint('fk_user_tracker_lobby', type_='foreignkey')
        batch_op.create_foreign_key(None, 'Lobby', ['LobbyId'], ['LobbyId'])
        batch_op.drop_column('LobbyID')

    with op.batch_alter_table('LobbyTimes', schema=None) as batch_op:
        batch_op.drop_constraint('fk_lobby_times_lobby', type_='foreignkey')
        batch_op.create_foreign_key(None, 'Lobby', ['LobbyID'], ['LobbyId'])

    with op.batch_alter_table('LobbyTags', schema=None) as batch_op:
        batch_op.drop_constraint('fk_lobby_tags_lobby', type_='foreignkey')
        batch_op.create_foreign_key(None, 'Lobby', ['LobbyID'], ['LobbyId'])
        batch_op.alter_column('RowID',
               existing_type=sa.NullType(),
               nullable=True)

    with op.batch_alter_table('LobbyPlayers', schema=None) as batch_op:
        batch_op.drop_constraint('fk_lobby_players_lobby', type_='foreignkey')
        batch_op.create_foreign_key(None, 'Lobby', ['LobbyID'], ['LobbyId'])
        batch_op.alter_column('RowID',
               existing_type=sa.NullType(),
               nullable=True)

    with op.batch_alter_table('Lobby', schema=None) as batch_op:
        batch_op.add_column(sa.Column('LobbyId', sa.TEXT(), nullable=False))
        batch_op.drop_constraint('uq_lobby_lobbyid', type_='unique')
        batch_op.drop_column('maxPlayers')
        batch_op.drop_column('LobbyID')

    op.create_table('_alembic_tmp_Lobby',
    sa.Column('GameID', sa.TEXT(), server_default=sa.text('0'), nullable=False),
    sa.Column('Desc', sa.TEXT(), nullable=True),
    sa.Column('LobbyID', sa.TEXT(), nullable=False),
    sa.Column('maxPlayers', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['GameID'], ['Games.UID'], ),
    sa.UniqueConstraint('LobbyID', name='uq_lobby_lobbyid')
    )
    # ### end Alembic commands ###